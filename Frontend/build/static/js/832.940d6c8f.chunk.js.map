{"version":3,"file":"static/js/832.940d6c8f.chunk.js","mappings":"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","sources":["views/BillView.jsx","views/GenerateBill.jsx","views/PDFView.jsx"],"sourcesContent":["import { Grid, makeStyles, Button } from '@material-ui/core'\r\nimport React, { useRef } from 'react'\r\nimport { Document } from 'react-pdf'\r\nimport { APP_TITLE, MobileNumber } from '../constants/constants';\r\nimport salon from \"../salon.png\"\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport classNames from 'classnames';\r\nimport { Page, PDFViewer } from '@react-pdf/renderer';\r\nimport ReactToPrint from 'react-to-print';\r\nimport axios from 'axios';\r\nimport { ADD_SERVICE, ADD_USER } from '../constants/apiConstants';\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    divider: {\r\n        marginTop: \"3vw\"\r\n\r\n    },\r\n    inputBox: {\r\n        marginTop: \"3vw\"\r\n    },\r\n    formControl: {\r\n        width: 150\r\n    },\r\n    sideLine: {\r\n        borderRight: \"1px solid hsl(210deg 10% 78%)\"\r\n    }\r\n    ,\r\n    bottomLine: {\r\n        borderBottom: \"1px solid hsl(210deg 10% 78%)\",\r\n    },\r\n    topLine: {\r\n        borderTop: \"1px solid hsl(210deg 10% 78%)\",\r\n\r\n    },\r\n    marginLine: {\r\n        border: \"1px solid hsl(210deg 10% 78%)\"\r\n    },\r\n    billBoxSize: {\r\n        height: \"10vh\"\r\n    },\r\n    topSpace: {\r\n        marginTop: \"3vh\"\r\n    },\r\n    line: {\r\n        width: \"100%\",\r\n        height: \"1vh\"\r\n    }\r\n}));\r\nfunction BillView({ value, deleteItem, setValue }) {\r\n    const componentRef = useRef();\r\n    const classes = useStyles();\r\n\r\n\r\n    const shareWithWhatsapp = () => {\r\n        let newURL = 'https://api.whatsapp.com/send?text=' + encodeURIComponent(\"https://www.google.com\");\r\n        window.open(newURL, \"_blank\");\r\n\r\n    }\r\n    const uploadData = () => {\r\n        axios.post(ADD_SERVICE, { ...value }).then((res) => {\r\n            console.log(res)\r\n            alert(\"Uploaded Successfully\")\r\n        }).catch((err) => {\r\n            alert(\"Something Went Wrong\")\r\n        })\r\n        setValue({ date: new Date().toISOString().split(\"T\")[0], service: [], invoice: { tax: 0 } })\r\n    }\r\n\r\n    return (\r\n\r\n        <Grid ref={componentRef} item container alignItems='center' justifyContent='center' lg={6} direction=\"column\" id=\"printable-div\">\r\n            <Grid item container lg={6} alignContent=\"center\" justifyContent='center'>\r\n                <h3>{APP_TITLE}</h3>\r\n            </Grid>\r\n            <Grid item container className={classes.bottomLine} lg={6} direction=\"row\" alignItems='center' justifyContent='space-between'>\r\n                <Grid item container direction='column' lg={3}> <Grid item>{value.date}</Grid><Grid item>Bill.No:{ }</Grid>\r\n                </Grid>\r\n                <Grid item container direction='column' lg={3}><Grid item>{MobileNumber}</Grid><Grid item><img src={salon} width=\"12vw\" height=\"12vh\"></img>&nbsp;:{value.serviceBy}</Grid>\r\n                </Grid>\r\n\r\n            </Grid>\r\n            <Grid item container lg={6} direction=\"row\" alignItems='center' justifyContent='space-between' className={classNames(classes.bottomLine)} >\r\n                <Grid item >S.NO</Grid>\r\n                <Grid item>SERVICE TYPE</Grid>\r\n                <Grid item>PRICE</Grid>\r\n            </Grid>\r\n            {/* <Grid item container lg={6} direction=\"column\" alignItems='center' justifyContent='space-between' className={classNames(classes.divider)} > */}\r\n            {value.service.map((x, index) => (<Grid item container lg={6} key={index} direction=\"row\" alignItems='baseline' justifyContent='space-between' style={{ paddingTop: \"2vh\" }} ><Grid item >{index + 1}</Grid><Grid item >{x.type}</Grid><Grid item >{x.price}<DeleteIcon onClick={(index) => deleteItem()} /> </Grid></Grid>\r\n            ))}\r\n\r\n            <Grid item container lg={6} direction=\"row\" alignItems='baseline' justifyContent='space-between' className={classNames(classes.divider, classes.topLine)}  >\r\n                <Grid item ></Grid>\r\n                <Grid item >Sub-Total</Grid>\r\n                <Grid item >{value.service.reduce((acc, current) => {\r\n                    return acc + parseFloat(current.price)\r\n                }, 0)}</Grid>\r\n            </Grid>\r\n            <Grid item container lg={6} direction=\"row\" alignItems='baseline' justifyContent='space-between' className={classNames(classes.divider, classes.topLine)}>\r\n                <Grid item ></Grid>\r\n                <Grid item >CGST</Grid>\r\n                <Grid item >{value.invoice.tax}</Grid>\r\n            </Grid>\r\n            <Grid item container lg={6} direction=\"row\" alignItems='baseline' justifyContent='space-between'  >\r\n                <Grid item ></Grid>\r\n                <Grid item >SGST</Grid>\r\n                <Grid item >{value.invoice.tax}</Grid>\r\n            </Grid>\r\n            <Grid item container lg={6} direction=\"row\" alignItems='baseline' justifyContent='space-between' className={classNames(classes.divider, classes.topLine)} >\r\n                <Grid item ></Grid>\r\n                <Grid item ><h2>Total</h2></Grid>\r\n                <Grid item ><h2>{value.invoice.total}</h2></Grid>\r\n            </Grid>\r\n            <Grid item container direction=\"row\" alignItems='center' justifyContent='space-evenly'>\r\n                <Button variant='contained' color='primary' onClick={() => uploadData()}>Upload</Button>\r\n\r\n                <ReactToPrint\r\n                    trigger={() => <Button variant='contained' color='primary' >Print</Button>}\r\n                    content={() => componentRef.current}\r\n                />\r\n                {/* <Button variant='contained' color=\"primary\" onClick={() => { shareWithWhatsapp() }}>Whatsapp</Button> */}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default BillView","import DateFnsUtils from '@date-io/date-fns';\r\nimport { Button, FormControl, Grid, InputLabel, makeStyles, Select } from '@material-ui/core';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport CustomInput from '../components/InputText/CustomInput';\r\nimport { ADD_USER, GET_USER } from '../constants/apiConstants';\r\nimport { service_by, service_type } from '../constants/constants';\r\nimport BillView from './BillView';\r\nimport PDFView from './PDFView';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  divider: {\r\n    marginTop: \"3vw\"\r\n\r\n  },\r\n  inputBox: {\r\n    marginTop: \"3vw\"\r\n  },\r\n  formControl: {\r\n    width: 150\r\n  },\r\n  sideLine: {\r\n    borderRight: \"1px solid hsl(210deg 10% 78%)\"\r\n  }\r\n  ,\r\n  bottomLine: {\r\n    borderBottom: \"1px solid hsl(210deg 10% 78%)\",\r\n  },\r\n  marginLine: {\r\n    border: \"1px solid hsl(210deg 10% 78%)\"\r\n  },\r\n  billBoxSize: {\r\n    height: \"10vh\"\r\n  },\r\n  topSpace: {\r\n    marginTop: \"3vh\"\r\n  },\r\n  line: {\r\n    width: \"100%\",\r\n    height: \"1vh\"\r\n  }\r\n}));\r\nfunction Billing() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState({ Name: \"\", date: new Date().toISOString().split(\"T\")[0], service: [], invoice: { tax: 0 } })\r\n  const [customerData, setCustomerData] = useState(\"\")\r\n  const [serviceType, setServiceType] = useState({ type: \"\" })\r\n  const [existingUser, setExistingUser] = useState(false);\r\n  const fetchDetails = () => {\r\n\r\n    axios.post(GET_USER, { ...value }).then((res) => {\r\n      if (res.data == false) {\r\n        alert(\"User Doesnt Exist\")\r\n      } else {\r\n        alert(\"User Exist\")\r\n        setExistingUser(true)\r\n      }\r\n    })\r\n  }\r\n  const addUser = () => {\r\n    axios.post(ADD_USER, { ...value }).then(({ data }) => {\r\n      if (data == false) {\r\n        alert(\"something wrong\")\r\n      }\r\n      else {\r\n        alert(\"User Added Successfully\")\r\n      }\r\n    }).catch((err) => {\r\n      alert(\"something wrong\")\r\n    })\r\n\r\n\r\n  }\r\n  const addService = () => {\r\n    let temp = Object.assign({}, serviceType);\r\n    setValue((prevState) => {\r\n      return ({ ...prevState, service: [...prevState.service, temp] })\r\n    })\r\n    setServiceType({ type: \"\", value: \"\" })\r\n  }\r\n  useEffect(() => {\r\n    gstCalculator();\r\n\r\n  }, [value.service])\r\n  const gstCalculator = () => {\r\n    let sgst = value.service.reduce((acc, current) => {\r\n      return acc + (parseFloat(current.price) * 9) / 100\r\n    }, 0)\r\n    setValue((prev) => ({ ...prev, invoice: { tax: sgst * 2 } }))\r\n  }\r\n  useEffect(() => {\r\n    TotalAmountCalculator();\r\n  }, [value.invoice.tax])\r\n  const TotalAmountCalculator = () => {\r\n    let totalAmount = value.service.reduce((acc, cur) => (acc + parseFloat(cur.price)), value.invoice.tax)\r\n    setValue((prev) => ({\r\n      ...prev,\r\n      invoice: {\r\n        tax:\r\n          prev.invoice.tax,\r\n        total: totalAmount\r\n      }\r\n    }\r\n    )\r\n    )\r\n  }\r\n  const deleteItem = (index) => {\r\n    let temp = [...value.service]\r\n    temp.splice(index, 1)\r\n    setValue((prev) => ({ ...prev, service: temp }))\r\n  }\r\n  useEffect(() => {\r\n\r\n  }, [value])\r\n\r\n  return (\r\n    <div className={classes.divider}>\r\n      <Grid container alignItems='center' justifyContent='center' lg={12} direction=\"row\">\r\n        <Grid item container alignItems='center' justifyContent='center' lg={6} direction=\"column\" spacing={3} className={classes.sideLine}>\r\n          <Grid item >\r\n            <CustomInput label=\"Mobile\" placeHolder=\"Enter Mobile Number\" type=\"mobile\" errormsg=\"Invalid Mobile Number\" setValue={setValue} value={value.mobileNumber} action={fetchDetails}></CustomInput>\r\n\r\n          </Grid>\r\n          <Grid item container alignItems='center' justifyContent='center' lg={6} direction=\"column\" >\r\n            {existingUser ? null : <><CustomInput label=\"Name\" placeHolder=\"Enter Customer Name\" type=\"name\" errormsg=\"Invalid Entry\" setValue={setValue} value={value.Name} ></CustomInput>\r\n              <Button variant='contained' color=\"primary\" onClick={() => addUser()}>Add User</Button></>}\r\n          </Grid>\r\n          <Grid item >\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"by-native-simple\">Service By</InputLabel>\r\n              <Select\r\n                native\r\n                value={value.serviceBy}\r\n                onChange={({ target: { value } }) => setValue((prevState) => ({ ...prevState, serviceBy: value }))}\r\n                inputProps={{\r\n                  name: 'Service By',\r\n                  id: 'by-native-simple',\r\n                }}\r\n              >\r\n                <option aria-label=\"None\" value=\"\" />\r\n                {service_by.map((name) =>\r\n                  <option key={name} value={name}>{name}</option>\r\n                )}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"by-native-simple\" >Service Type</InputLabel>\r\n              <Select\r\n                native\r\n                value={serviceType.type}\r\n                onChange={(event) => {\r\n                  let type = event.target.options[event.target.selectedIndex].text;\r\n                  let { price } = service_type.find(({ type }) => type == type)\r\n                  return setServiceType({ type: type, price: price })\r\n                }\r\n                }\r\n                inputProps={{\r\n                  name: 'Service By',\r\n                  id: 'by-native-simple',\r\n                }}\r\n              >\r\n                <option aria-label=\"None\" value=\"\" />\r\n                {service_type.map((service, index) =>\r\n                  <option key={index} value={service.type}>{service.type}</option>\r\n                )}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button variant='contained' color='primary' onClick={() => addService()\r\n            }>Add</Button>\r\n          </Grid>\r\n          <Grid item >\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                disableToolbar\r\n                variant=\"inline\"\r\n                margin=\"normal\"\r\n                id=\"date-picker-inline\"\r\n                format='MM/dd/yyyy'\r\n                label=\"Date picker inline\"\r\n                value={value.date}\r\n                onChange={(value) => {\r\n\r\n                  setValue((prevState) => ({ ...prevState, date: value.toISOString().split(\"T\")[0] }))\r\n                }}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <BillView deleteItem={deleteItem} value={value} setValue={setValue}></BillView>\r\n      </Grid>\r\n      {/* <PDFView></PDFView> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Billing","import React from 'react';\r\nimport { Page, Text, View, Document, StyleSheet, PDFViewer } from '@react-pdf/renderer';\r\n\r\n// Create styles\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n        flexDirection: 'row',\r\n        backgroundColor: '#E4E4E4'\r\n    },\r\n    section: {\r\n        margin: 10,\r\n        padding: 10,\r\n        flexGrow: 1\r\n    }\r\n});\r\n\r\n// Create Document Component\r\nconst PDFView = () => (\r\n    <PDFViewer>\r\n        <Document>\r\n            <Page size=\"A4\" style={styles.page}>\r\n                <View style={styles.section}>\r\n                    <Text>Section #1</Text>\r\n                </View>\r\n                <View style={styles.section}>\r\n                    <Text>Section #2</Text>\r\n                </View>\r\n            </Page>\r\n        </Document></PDFViewer>\r\n);\r\nexport default PDFView;"],"names":["useStyles","makeStyles","theme","divider","marginTop","inputBox","formControl","width","sideLine","borderRight","bottomLine","borderBottom","topLine","borderTop","marginLine","border","billBoxSize","height","topSpace","line","value","deleteItem","setValue","componentRef","useRef","classes","Grid","ref","item","container","alignItems","justifyContent","lg","direction","id","alignContent","APP_TITLE","className","date","MobileNumber","src","salon","serviceBy","classNames","service","map","x","index","style","paddingTop","type","price","Delete","onClick","reduce","acc","current","parseFloat","invoice","tax","total","Button","variant","color","axios","ADD_SERVICE","then","res","console","log","alert","catch","err","Date","toISOString","split","trigger","content","StyleSheet","page","flexDirection","backgroundColor","section","margin","padding","flexGrow","useState","Name","serviceType","setServiceType","existingUser","setExistingUser","useEffect","gstCalculator","sgst","prev","TotalAmountCalculator","totalAmount","cur","spacing","CustomInput","label","placeHolder","errormsg","mobileNumber","action","GET_USER","data","ADD_USER","FormControl","InputLabel","htmlFor","Select","native","onChange","target","prevState","inputProps","name","service_by","event","options","selectedIndex","text","service_type","temp","Object","assign","addService","M","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","splice"],"sourceRoot":""}